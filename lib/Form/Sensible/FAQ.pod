=head1 NAME

Form::Sensible::FAQ - Answers to questions about how to use Form::Sensible

=head1 Fields

=over 4

=item I have a hash that contains the field values, what's the best way to get those into a Form::Sensible form?

There are two ways to do this. The preferred way is usually to delegate
your form's field values to your hash. You often want to do this to link a
form's fields to a single source of data, for example,
L<Catalyst::Request|Catalyst>'s C<<$c->req->params>> hashref. This can be done
easily using the C<Form::Sensible::Form|Form::Sensible::Form>'s
C<delegate_all_field_values_to_hashref()> routine:

 $form->delegate_all_field_values_to_hashref($c->req->params);
 
After that, all fields will get and set their values via the C<<$c->req->params>> hashref.

If you have not delegated your field's values to something else (as indicated above), the form itself 
will store the values.  In this case, you must push the values into the form object instead.  You can
accomplish this by calling << $form->set_values($your_hashref); >> 


=head1 Validation

=over 4

=item How do I create validation that involves multiple fields (like password and confirmation fields)?

Individual field based validation is handled via the individual field's C<validation> hash.  If you want
to check multiple fields together you need to do whole-form level validation.  This can be accomplished 
easily via the form's C<validation> hash as follows:

    $form->validation({
                        code => sub {
                                my ($form, $result) = @_;
                                
                                if ($form->field('password')->value() ne $form->field('password2')->value()) {
                                    $result->add_error('password2', 'Passwords do not match');
                                }
                        }
    });

=back

=head1 HTML Rendering

=head2 CSS tagging

=head2 HTML changes

=over 4

=item How do I override a field's template or change the field wrapper?

Overriding a field's template is easy

=back

=head1 Delegates


=head1 Miscelleneous Questions

=over 4

=item I keep seeing messages like "Can't locate method 'set_values' on package Form::Sensible", What's up?"

This can happen if you are passing a C<< Form::Sensible->create_form(...) >>
hash to C<< Form::Sensible->new() >>. The C<< Form::Sensible->new() >> call is
for creating forms programmatically and expects only
L<Form::Sensible::Form|Form::Sensible::Form> attributes as parameters.  

=head1 AUTHORS

Jay Kuri, C<jayk@cpan.org>

=head1 SPONSORED BY

Ionzero LLC. L<http://ionzero.com/>

=head1 COPYRIGHT & LICENSE

Copyright (c) 2010 the aforementioned authors. All rights
reserved. This program is free software; you can redistribute
it and/or modify it under the same terms as Perl itself.

=cut
